df_ordem_compra$len_titulo %>% hist()
df_avalia <- df_avalia %>%
mutate(
len_titulo = df_avalia$review_comment_title %>% nchar() %>% replace_na(0),
len_comentario = df_avalia$review_comment_message %>% nchar() %>% replace_na(0) # contar ! como + e  como neg, linhas de ex: 755 e 812
) %>%
mutate(
colocou_titulo = ifelse(len_titulo > 0 , "Sim", "Nao")
)
##########
df_ordem_compra %>%
ggplot(aes(y = len_comentario, x = as_factor(review_score), fill = colocou_titulo)) +
geom_boxplot()
df_ordem_compra <- df_pagamentos %>%
inner_join(df_pedidos, join_by(order_id)) %>%
inner_join(df_avalia, join_by(order_id)) %>%
inner_join(df_cliente, join_by(customer_id)) %>%
select(-customer_id)
##########
df_ordem_compra %>%
ggplot(aes(y = len_comentario, x = as_factor(review_score), fill = colocou_titulo)) +
geom_boxplot()
df_ordem_compra %>%
ggplot(aes(y = len_comentario, fill = as_factor(review_score), x = colocou_titulo)) +
geom_boxplot()
library(stringr)
df_avalia <- df_avalia %>%
mutate(
len_titulo = df_avalia$review_comment_title %>% nchar() %>% replace_na(0),
len_comentario = df_avalia$review_comment_message %>% nchar() %>% replace_na(0),
comentario_exc = felse(is.na(df_avalia$review_comment_message), 0, str_count(df_avalia$review_comment_message, fixed("!")))# contar ! como + e  como neg, linhas de ex: 755 e 812
) %>%
mutate(
colocou_titulo = ifelse(len_titulo > 0 , "Sim", "Nao")
)
df_avalia <- df_avalia %>%
mutate(
len_titulo = df_avalia$review_comment_title %>% nchar() %>% replace_na(0),
len_comentario = df_avalia$review_comment_message %>% nchar() %>% replace_na(0),
comentario_exc = ifelse(is.na(df_avalia$review_comment_message), 0, str_count(df_avalia$review_comment_message, fixed("!")))# contar ! como + e  como neg, linhas de ex: 755 e 812
) %>%
mutate(
colocou_titulo = ifelse(len_titulo > 0 , "Sim", "Nao")
)
df_ordem_compra <- df_pagamentos %>%
inner_join(df_pedidos, join_by(order_id)) %>%
inner_join(df_avalia, join_by(order_id)) %>%
inner_join(df_cliente, join_by(customer_id)) %>%
select(-customer_id)
df_avalia$comentario_exc
df_avalia$comentario_exc %>% hist()
df_avalia$comentario_exc %>% summary()
df_avalia %>% filter(comentario_exc > 100)
df_avalia %>% filter(comentario_exc > 100) %>% select(review_comment_message)
df_avalia$comentario_exc %>% summary()
df_avalia$comentario_exc %>% table()
df_avalia <- df_avalia %>%
mutate(
len_titulo = df_avalia$review_comment_title %>% nchar() %>% replace_na(0),
len_comentario = df_avalia$review_comment_message %>% nchar() %>% replace_na(0),
comentario_exc = ifelse(is.na(df_avalia$review_comment_message), 0, str_count(df_avalia$review_comment_message, fixed("!")))# contar ! como + e  como neg, linhas de ex: 755 e 812
) %>%
mutate(
colocou_titulo = ifelse(len_titulo > 0 , "Sim", "Nao"),
colocou_exc = ifelse(comentario_exc > 0 , "Sim", "Nao")
)
df_ordem_compra <- df_pagamentos %>%
inner_join(df_pedidos, join_by(order_id)) %>%
inner_join(df_avalia, join_by(order_id)) %>%
inner_join(df_cliente, join_by(customer_id)) %>%
select(-customer_id)
##########
df_ordem_compra %>%
ggplot(aes(y = len_comentario, x = as_factor(review_score), fill = colocou_titulo)) +
geom_boxplot()
df_ordem_compra %>%
ggplot(aes(y = len_comentario, x = as_factor(review_score), fill = colocou_exc)) +
geom_boxplot()
df_compra
df_compra$product_category_name
df_compra$product_category_name %>% unique()
View(df_compra)
########
df <- df_ordem_compra %>%
inner_join(df_compra, join_by(order_id)) %>%
select(-order_id)
df
df %>% head() %>% View()
df_pagamentos <-  read_csv(  "olist_dados/archive/olist_order_payments_dataset.csv")
df_pagamentos = df_pagamentos %>% mutate(
log_valor = log(df_pagamentos$payment_value+1) # nao termos -inf
)
df_pagamentos %>% summary() # parcelas
df_pedidos <- read_csv("olist_dados/archive/olist_orders_dataset.csv")
df_pedidos%>% summary()
df_cliente <- read_csv("olist_dados/archive/olist_customers_dataset.csv")
df_cliente%>% summary()
df_cliente
df_cliente$customer_id %>% unique() %>% length()
df_cliente$customer_unique_id %>% unique() %>% length()
96096-99441
3345/100000
#df_local <- read_csv("olist_dados/archive/olist_geolocation_dataset.csv")
df_avalia <- read_csv("olist_dados/archive/olist_order_reviews_dataset.csv")
df_avalia <- df_avalia %>%
mutate(
len_titulo = df_avalia$review_comment_title %>% nchar() %>% replace_na(0),
len_comentario = df_avalia$review_comment_message %>% nchar() %>% replace_na(0),
comentario_exc = ifelse(is.na(df_avalia$review_comment_message), 0, str_count(df_avalia$review_comment_message, fixed("!")))# contar ! como + e  como neg, linhas de ex: 755 e 812
) %>%
mutate(
colocou_titulo = ifelse(len_titulo > 0 , "Sim", "Nao"),
colocou_exc = ifelse(comentario_exc > 0 , "Sim", "Nao")
)
df_avalia %>% filter(comentario_exc > 100) %>% select(review_comment_message)
df_pagamentos$order_id %>% length()
df_pagamentos$order_id %>% unique() %>% length()
df_pedidos$order_id %>% length()
df_pedidos$order_id %>% unique() %>% length()
df_pagamentos %>% order_by(order_id) %>% head()
df_pagamentos %>% arrange(order_id) %>% head()
df_pagamentos %>% table(order_id) >1
df_pagamentos %>% table(order_id)
table(df_pagamentos$order_id)
table(df_pagamentos$order_id)[table(df_pagamentos$order_id)] > 2]
(table(df_pagamentos$order_id)] > 2) %>% cbind()
table(df_pagamentos$order_id) > 2
(table(df_pagamentos$order_id) > 2) %>% filter(TRUE)
table(df_pagamentos$order_id)[table(df_pagamentos$order_id) > 2]
df-pagamentos %>% filter(order_id = 'ff1f8f328e5a59ac754240b6dd31bcb4')
df_pagamentos %>% filter(order_id = 'ff1f8f328e5a59ac754240b6dd31bcb4')
df_pagamentos %>% filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4')
df_pagamentos %>% filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4') %>% View()
df_pagamentos
df_pagamentos %>%
filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4') %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
)
df_pagamentos %>%
filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4') %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(names_from = payment_type, values_from = n, names_prefix = TipoPagamento_
)
df_pagamentos %>%
filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4') %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(names_from = payment_type, values_from = n, names_prefix = 'TipoPagamento_'
)
df_pagamentos %>%
filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4')
df_pagamentos %>%
filter(payment_installments > 1)
df_pagamentos %>%
filter(payment_installments > 1) %>% pull(order_id)
df_pagamentos %>%
filter(order_id == "263c5916eca59eff23f65a1cab611380" )
df_pagamentos %>%
filter(order_id == "3db98e0e4429b61241e02a015c6cea46" )
df_pagamentos %>%
filter(order_id == "3db98e0e4429b61241e02a015c6cea46" ) %>%
group_by(order_id) %>%
summarise(
parcela_maxima = max(payment_sequential),
pago_a_vista = ifelse(
# se ha um so pagamento que paga todas as parcelas
(max(payment_sequential) == 1) &&
(min(payment_instal) == max(payment_installments)), "Sim", "Nao")
)
df_pagamentos %>%
filter(order_id == "3db98e0e4429b61241e02a015c6cea46" )
df_pagamentos %>%
filter(order_id == "3db98e0e4429b61241e02a015c6cea46" ) %>%
group_by(order_id) %>%
summarise(
parcela_maxima = max(payment_sequential),
pago_a_vista = ifelse(
# se ha um so pagamento que paga todas as parcelas
(max(payment_sequential) == 1) &&
(min(payment_instal) == max(payment_installments)), "Sim", "Nao")
)
df_pagamentos
df_pagamentos %>% head(2)
df_pagamentos %>%
filter(order_id == "3db98e0e4429b61241e02a015c6cea46" ) %>%
group_by(order_id) %>%
summarise(
parcela_maxima = max(payment_sequential),
pago_a_vista = ifelse(
# se ha um so pagamento que paga todas as parcelas
(max(payment_sequential) == 1) &&
(min(payment_installments) == max(payment_installments)), "Sim", "Nao")
)
df_pagamentos %>%
filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4')
df_pagamentos
df_pagamentos %>% summary()
df_pagamentos %>%
filter(payment_sequential == 29)
df_pagamentos %>%
filter(payment_sequential == 29) %>% pull(order_id)
df_pagamentos %>%
filter(order_id == "fa65dad1b0e818e3ccc5cb0e39231352")
df_pagamentos %>%
filter(order_id == "fa65dad1b0e818e3ccc5cb0e39231352") %>% View()
# Forma de pagamento
df_forma_pag <- df_pagamentos %>%
filter(order_id == 'ff1f8f328e5a59ac754240b6dd31bcb4') %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(names_from = payment_type, values_from = n, names_prefix = 'TipoPagamento_'
)
df_forma_pag$order_id %>% unique() %>% length()
# Forma de pagamento
df_forma_pag <- df_pagamentos %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(names_from = payment_type, values_from = n, names_prefix = 'TipoPagamento_'
)
df_forma_pag$order_id %>% unique() %>% length()
df_forma_pag$order_id %>% length()
df_forma_pag %>% head(1)
# Forma de pagamento
df_forma_pag <- df_pagamentos %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(names_from = payment_type, values_from = n, names_prefix = 'TipoPag_'
)
df_forma_pag %>% head(3)
# Forma de pagamento
df_forma_pag <- df_pagamentos %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(
names_from = payment_type, values_from = n, names_prefix = 'TipoPag_', values_fill = 0
)
df_forma_pag %>% head(3)
# Forma de pagamento
df_forma_pag <- df_pagamentos %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(
names_from = payment_type, values_from = n, names_prefix = 'TipoPag_', values_fill = 0
) %>% mutate(rowSums(df_forma_pag %>% select(-order_id)))
rowSums(df_forma_pag %>% select(-order_id))
df_forma_pag
df_forma_pag %>% head(3)
df_forma_pag %>% select(-order_id) %>% rowSums() %>% head(3)
# Registro pag
df_pagamentos %>%
group_by(order_id) %>%
summarise(
log_valor_pago = log(sum(payment_value)),
parcelado_em = max(payment_sequential),
log_valor_medio_parcela = log(mean(payment_value)),
pago_a_vista = ifelse(
# se ha um so pagamento que paga todas as parcelas
(max(payment_sequential) == 1) &&
(min(payment_installments) == max(payment_installments)), "Sim", "Nao")
)
# Registro pag
df_registro <- df_pagamentos %>%
group_by(order_id) %>%
summarise(
log_valor_pago = log(sum(payment_value)),
parcelado_em = max(payment_sequential),
log_valor_medio_parcela = log(mean(payment_value)),
pago_a_vista = ifelse(
# se ha um so pagamento que paga todas as parcelas
(max(payment_sequential) == 1) &&
(min(payment_installments) == max(payment_installments)), "Sim", "Nao")
)
df_registro
df_registro$order_id %>% unique() %>% length(
)
df_registro$order_id  %>% length(
)
df_registro
df_registro$parcelado_em %>% table()
df_registro$log_valor_pago %>% hist()
df_registro$log_valor_medio_parcela %>% hist()
df_registro$pago_a_vista %>% tibble()
df_registro$pago_a_vista %>% table()
# Registro pag
df_registro <- df_pagamentos %>%
group_by(order_id) %>%
summarise(
log_valor_pago = log(sum(payment_value)),
parcelado = if_else(max(payment_sequential)==1, "Sim", "Nao"),
log_valor_medio_parcela = log(mean(payment_value)),
pago_a_vista = ifelse(
# se ha um so pagamento que paga todas as parcelas
(max(payment_sequential) == 1) &&
(min(payment_installments) == max(payment_installments)), "Sim", "Nao")
)
# Forma de pagamento
df_forma_pag <- df_pagamentos %>%
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(
names_from = payment_type, values_from = n, names_prefix = 'TipoPag_', values_fill = 0
) %>% mutate(
soma_tipos_pagamentos = sum(c_across(starts_with("TipoPag_")))
)
df_forma_pag %>% head(3)
df_forma_pag %>% head(3) %>% View()
df_registro %>% head(3) %>% View()
table(df_registro$parcelado, df_registro$pago_a_vista)
df_forma_pag <- df_pagamentos %>%
count(order_id, payment_type, name = "n") %>%
pivot_wider(
names_from = payment_type,
values_from = n,
names_prefix = 'TipoPag_',
values_fill = list(n = 0)
) %>%
rowwise() %>%
mutate(soma_tipos_pagamentos = sum(c_across(starts_with("TipoPag_")))) %>%
ungroup()
# Registro pag
df_registro <- df_pagamentos %>%
group_by(order_id) %>%
summarise(
log_valor_pago = log(sum(payment_value)),
pago_a_vista = if_else(max(payment_sequential)==1, "Sim", "Nao"),
log_valor_medio_parcela = log(mean(payment_value))
)
df_forma_pag %>% inner_join(df_registro, order_id) %>% head(3) %>% View()
df_forma_pag
df_registro
df_forma_pag %>% inner_join(df_registro, join_by(order_id))
df_ordem_compra <-
df_forma_pag %>% inner_join(df_registro, join_by(order_id)) %>% # Pagamentos
inner_join(df_pedidos, join_by(order_id))
df_ordem_compra
df_ordem_compra %>% head(3) %>% View()
df_pedidos
df_pagamentos$payment_type %>% table()
df_pagamentos %>% group_by(payment_type) %>% summarise(n = n()) %>% filter(n = max(n))
df_pagamentos %>% group_by(payment_type) %>% summarise(n = n()) %>% filter(n == max(n))
df_pagamentos %>% group_by(payment_type) %>% summarise(n = n()) %>% filter(n == max(n)) %>% pull(payment_type)
df_pagamentos%>%
replace(
payment_type, not_defined,pag_mais_freq
)
pag_mais_freq <- df_pagamentos %>%
group_by(payment_type) %>% summarise(n = n()) %>%
filter(n == max(n)) %>% pull(payment_type)
df_pagamentos%>%
replace(
payment_type, not_defined,pag_mais_freq
)
df_pagamentos%>%
replace(
payment_type, not_defined,pag_mais_freq %>% pull()
)
df_pagamentos%>%
replace(
payment_type, not_defined,pag_mais_freq %>% pluck()
)
pag_mais_freq %>% pluck(1)
df_pagamentos%>%
replace(
payment_type, not_defined,pag_mais_freq %>% pluck(1)
)
pag_mais_freq <- df_pagamentos %>%
group_by(payment_type) %>% summarise(n = n()) %>%
filter(n == max(n)) %>% pull(payment_type)
df_pagamentos <- df_pagamentos %>%
mutate(
payment_type = if_else(payment_type == "not_defined", pag_mais_freq, payment_type)
)
df_forma_pag <- df_pagamentos %>% # Forma de pagamento
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(
names_from = payment_type, values_from = n, names_prefix = 'TipoPag_', values_fill = 0
) %>% mutate(
soma_tipos_pagamentos = sum(c_across(starts_with("TipoPag_")))
)
df_registro <- df_pagamentos %>% # Registro pag
group_by(order_id) %>%
summarise(
log_valor_pago = log(sum(payment_value)),
pago_a_vista = if_else(max(payment_sequential)==1, "Sim", "Nao"),
log_valor_medio_parcela = log(mean(payment_value))
)
df_pedidos%>% summary()
df_forma_pag %>% inner_join(df_registro, join_by(order_id)) %>% summary()
teste = df_pagamentos %>% # Forma de pagamento
group_by(order_id, payment_type) %>%
summarise(
n = n()
) %>% pivot_wider(
names_from = payment_type, values_from = n, names_prefix = 'TipoPag_', values_fill = 0
)
teste
df_pedidos %>%
mutate(
tempo_conf_pedido = as.numeric(difftime(order_approved_at, order purchase timestamp , units = "days"))
df_pedidos %>%
mutate(
tempo_conf_pedido = as.numeric(difftime(order_approved_at, order_purchase_timestamp , units = "days"))
)
df_pedidos %>%
mutate(
tempo_conf_pedido = as.numeric(difftime(order_approved_at, order_purchase_timestamp,
units = "days")),
atraso_prev_entrega = ifelse(
as.numeric(difftime(order_estimated_delivery_date, order_delivered_customer_date,"days")) <= 0,
"Nao", "Sim"
)
) %>% View()
df_pedidos <- df_pedidos %>%
mutate(
tempo_conf_pedido = as.numeric(difftime(order_approved_at, order_purchase_timestamp,
units = "days")),
atraso_prev_entrega = case_when(
is.na(order_estimated_delivery_date) ~ ifelse(as.numeric(difftime(as.Date("2018-05-31"), order_delivered_customer_date,"days")) <= 0,"Sim","Nao"),
as.numeric(difftime(order_estimated_delivery_date, order_delivered_customer_date,"days")) <= 0,
"Sim","Nao"
)
)
df_pedidos <- df_pedidos %>%
mutate(
tempo_conf_pedido = as.numeric(difftime(order_approved_at, order_purchase_timestamp, units = "days")),
atraso_prev_entrega = case_when(
is.na(order_estimated_delivery_date) &
as.numeric(difftime(as.Date("2018-05-31"), order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
!is.na(order_estimated_delivery_date) &
as.numeric(difftime(order_estimated_delivery_date, order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
TRUE ~ "Nao"
)
)
df_pedidos%>% summary()
df_pedidos$atraso_prev_entrega %>% table()
data_atual <- as.Date("2018-05-31")
data_atual
df_pedidos <- df_pedidos %>%
mutate(
tempo_conf_pedido = case_when(
is.na(order_estimated_delivery_date) ~
as.numeric(difftime(data_atual, order_purchase_timestamp, units = "days")),
TRUE ~ as.numeric(difftime(order_approved_at, order_purchase_timestamp, units = "days"))
),
atraso_prev_entrega = case_when(
is.na(order_estimated_delivery_date) &
as.numeric(difftime(data_atual, order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
!is.na(order_estimated_delivery_date) &
as.numeric(difftime(order_estimated_delivery_date, order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
TRUE ~ "Nao"
)
)
df_pedidos%>% summary()
df_pedidos$tempo_conf_pedido
df_pedidos %>% View()
df_avalia$order_id %>% length()
df_avalia$order_id %>% unique() %>% length()
df_pedidos$customer_id %>% unique() %>% length()
df_pedidos$customer_id %>% length()
df_pedidos$customer_id
df_pedidos <- df_pedidos %>%
mutate(
dia_pedido = weekdays(order_purchase_timestamp),
tempo_conf_pedido = case_when(
is.na(order_estimated_delivery_date) ~
as.numeric(difftime(data_atual, order_purchase_timestamp, units = "days")),
TRUE ~ as.numeric(difftime(order_approved_at, order_purchase_timestamp, units = "days"))
),
atraso_prev_entrega = case_when(
is.na(order_estimated_delivery_date) &
as.numeric(difftime(data_atual, order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
!is.na(order_estimated_delivery_date) &
as.numeric(difftime(order_estimated_delivery_date, order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
TRUE ~ "Nao"
)
)
df_pedidos%>% summary()
df_pedidos$dia_pedido
df_pedidos$dia_pedido %>% table()
df_pedidos %>% filter(order_purchase_timestamp %>% is.na())
df_pedidos %>% filter(order_approved_at %>% is.na())
df_pedidos <- df_pedidos %>%
mutate(
dia_pedido = weekdays(order_purchase_timestamp),
tempo_conf_pedido = case_when(
is.na(order_approved_at) ~
as.numeric(difftime(data_atual, order_purchase_timestamp, units = "days")),
TRUE ~ as.numeric(difftime(order_approved_at, order_purchase_timestamp, units = "days"))
),
atraso_prev_entrega = case_when(
is.na(order_estimated_delivery_date) &
as.numeric(difftime(data_atual, order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
!is.na(order_estimated_delivery_date) &
as.numeric(difftime(order_estimated_delivery_date, order_delivered_customer_date, units = "days")) <= 0 ~ "Sim",
TRUE ~ "Nao"
)
)
df_pedidos%>% summary()
df_pedidos$order_status %>% table()
